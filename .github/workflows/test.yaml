name: Test Website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  html-validation:
    name: HTML Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tests
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run HTML validation
      run: npm run test:html
    
    - name: Upload HTML validation results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: html-validation-results
        path: |
          ${{ github.workspace }}/reports/html-validate-report.json
          ${{ github.workspace }}/reports/html-validate-report.html

  css-validation:
    name: CSS Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tests
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run CSS validation
      run: npm run test:css
    
    - name: Upload CSS validation results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: css-validation-results
        path: |
          ${{ github.workspace }}/reports/stylelint-report.json
          ${{ github.workspace }}/reports/stylelint-report.html

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tests
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: ${{ github.workspace }}/reports/coverage/

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tests
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run accessibility tests
      run: npm run test:accessibility
    
    - name: Upload accessibility test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-test-results
        path: ${{ github.workspace }}/reports/coverage/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tests
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run performance tests
      run: npm run test:performance
    
    - name: Upload performance test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results
        path: ${{ github.workspace }}/reports/coverage/

  asset-validation:
    name: Asset Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tests
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run asset validation tests
      run: npm test -- --testPathPattern=asset-validation
    
    - name: Upload asset validation results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: asset-validation-results
        path: ${{ github.workspace }}/reports/coverage/

  cross-browser-tests:
    name: Cross-Browser Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tests
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run cross-browser tests
      run: npm run test:cross-browser
    
    - name: Upload cross-browser test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cross-browser-test-results
        path: |
          ${{ github.workspace }}/reports/test-results/
          ${{ github.workspace }}/reports/playwright-report/

  lighthouse-audit:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: tests/package-lock.json
    
    - name: Install dependencies
      run: |
        cd tests
        npm ci
    
    - name: Start local server
      run: |
        cd src
        python3 -m http.server 3000 &
        sleep 5
    
    - name: Run Lighthouse audit
      run: |
        cd tests
        npx lighthouse http://localhost:3000 --output=json --output-path=../reports/lighthouse-report.json --chrome-flags="--headless --no-sandbox"
    
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results
        path: ${{ github.workspace }}/reports/lighthouse-report.json

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [html-validation, css-validation, unit-tests, accessibility-tests, performance-tests, asset-validation, cross-browser-tests, lighthouse-audit]
    if: always()
    steps:
    - name: Test Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.html-validation.result }}" == "success" ]; then
          echo "| HTML Validation | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| HTML Validation | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.css-validation.result }}" == "success" ]; then
          echo "| CSS Validation | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| CSS Validation | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.unit-tests.result }}" == "success" ]; then
          echo "| Unit Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Unit Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.accessibility-tests.result }}" == "success" ]; then
          echo "| Accessibility Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Accessibility Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.performance-tests.result }}" == "success" ]; then
          echo "| Performance Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Performance Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.asset-validation.result }}" == "success" ]; then
          echo "| Asset Validation | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Asset Validation | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.cross-browser-tests.result }}" == "success" ]; then
          echo "| Cross-Browser Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Cross-Browser Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.lighthouse-audit.result }}" == "success" ]; then
          echo "| Lighthouse Audit | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Lighthouse Audit | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All test artifacts have been uploaded and can be downloaded from the Actions tab." >> $GITHUB_STEP_SUMMARY 